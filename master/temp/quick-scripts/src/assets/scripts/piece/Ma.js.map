{"version":3,"sources":["assets\\scripts\\piece\\Ma.js"],"names":["cc","Class","require","setflag","status","X","Y","grids","node","dirx","Array","diry","hinderx","hindery","nums","i","x","y","hx","hy","flag","hasPiece"],"mappings":";;;;;;AAAA;;;;AAKAA,EAAE,CAACC,KAAH,CAAS;AACL,aAASC,OAAO,CAAC,OAAD,CADX;AAGLC,EAAAA,OAAO,EAAE,iBAASC,MAAT,EAAiBC,CAAjB,EAAoBC,CAApB,EAAuB;AAC5B,QAAIC,KAAK,GAAG,KAAKC,IAAL,CAAUD,KAAtB;AACA,QAAIE,IAAI,GAAGC,KAAK,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAAC,CAAtB,EAAyB,CAAC,CAA1B,CAAhB;AACA,QAAIC,IAAI,GAAGD,KAAK,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAC,CAAd,EAAiB,CAAC,CAAlB,EAAqB,CAAC,CAAtB,EAAyB,CAAC,CAA1B,CAAhB,CAH4B,CAK5B;;AACA,QAAIE,OAAO,GAAGF,KAAK,CAAC,CAAC,CAAF,EAAK,CAAL,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAC,CAAxB,CAAnB;AACA,QAAIG,OAAO,GAAGH,KAAK,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAC,CAAjB,EAAoB,CAAC,CAArB,EAAwB,CAAxB,CAAnB,CAP4B,CAS5B;;AACAH,IAAAA,KAAK,CAACF,CAAD,CAAL,CAASC,CAAT,EAAYQ,IAAZ,IAAoBV,MAApB,CAV4B,CAY5B;;AACA,SAAI,IAAIW,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,CAAnB,EAAsBA,CAAC,EAAvB,EAA2B;AACvB,UAAIC,CAAC,GAAGX,CAAC,GAAGI,IAAI,CAACM,CAAD,CAAhB;AACA,UAAIE,CAAC,GAAGX,CAAC,GAAGK,IAAI,CAACI,CAAD,CAAhB;AACA,UAAIG,EAAE,GAAGb,CAAC,GAAGO,OAAO,CAACG,CAAD,CAApB;AACA,UAAII,EAAE,GAAGb,CAAC,GAAGO,OAAO,CAACE,CAAD,CAApB;AAEA,UAAGC,CAAC,GAAG,CAAJ,IAASA,CAAC,GAAG,CAAb,IAAkBC,CAAC,GAAG,CAAtB,IAA2BA,CAAC,GAAG,CAAlC,EAAqC;AACrC,UAAGV,KAAK,CAACS,CAAD,CAAL,CAASC,CAAT,EAAYG,IAAZ,IAAoB,CAAvB,EAA0B,SAPH,CASvB;;AACA,UAAGF,EAAE,IAAI,CAAN,IAAWA,EAAE,IAAI,CAAjB,IAAsBC,EAAE,IAAI,CAA5B,IAAiCA,EAAE,IAAI,CAAvC,KACEZ,KAAK,CAACW,EAAD,CAAL,CAAUC,EAAV,EAAcC,IAAd,IAAsB,CAAtB,IAA2Bb,KAAK,CAACW,EAAD,CAAL,CAAUC,EAAV,EAAcE,QAD3C,CAAH,EACyD;AAEzDd,MAAAA,KAAK,CAACS,CAAD,CAAL,CAASC,CAAT,EAAYH,IAAZ,IAAoBV,MAApB;AACH;AACJ;AA/BI,CAAT","sourceRoot":"/","sourcesContent":["/**\n * 控制棋子马的组件\n * \n */\n\ncc.Class({\n    extends: require(\"Piece\"),\n\n    setflag: function(status, X, Y) {\n        var grids = this.node.grids;\n        var dirx = Array(-2, -1, 1, 2, 2, 1, -1, -2);\n        var diry = Array(1, 2, 2, 1, -1, -2, -2, -1);\n\n        // 马脚\n        var hinderx = Array(-1, 0, 0, 1, 1, 0, 0, -1);\n        var hindery = Array(0, 1, 1, 0, 0, -1, -1, 0);\n\n        // 自身格子\n        grids[X][Y].nums += status;\n\n        // 周围格子\n        for(var i = 0; i < 8; i++) {\n            var x = X + dirx[i];\n            var y = Y + diry[i];\n            var hx = X + hinderx[i];\n            var hy = Y + hindery[i];\n\n            if(x < 0 || x > 9 || y < 0 || y > 9) continue;\n            if(grids[x][y].flag == 0) continue;\n\n            // 检查是否绊马脚\n            if(hx >= 0 && hx <= 9 && hy >= 0 && hy <= 9 && \n                (grids[hx][hy].flag == 0 || grids[hx][hy].hasPiece)) continue;\n                \n            grids[x][y].nums += status;\n        }\n    },\n});\n"]}