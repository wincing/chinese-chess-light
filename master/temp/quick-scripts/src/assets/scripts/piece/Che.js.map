{"version":3,"sources":["assets\\scripts\\piece\\Che.js"],"names":["cc","Class","require","setflag","status","X","Y","x","y","grids","node","nums","flag","hasPiece"],"mappings":";;;;;;AAAA;;;AAIAA,EAAE,CAACC,KAAH,CAAS;AACL,aAASC,OAAO,CAAC,OAAD,CADX;AAGLC,EAAAA,OAAO,EAAE,iBAASC,MAAT,EAAiBC,CAAjB,EAAoBC,CAApB,EAAuB;AAC5B,QAAIC,CAAC,GAAGF,CAAR;AACA,QAAIG,CAAC,GAAGF,CAAR;AACA,QAAIG,KAAK,GAAG,KAAKC,IAAL,CAAUD,KAAtB,CAH4B,CAK5B;;AACAA,IAAAA,KAAK,CAACJ,CAAD,CAAL,CAASC,CAAT,EAAYK,IAAZ,IAAoBP,MAApB,CAN4B,CAQ5B;;AACA,OAAG;AACCG,MAAAA,CAAC;AACD,UAAGA,CAAC,GAAG,CAAJ,IAASE,KAAK,CAACF,CAAD,CAAL,CAASC,CAAT,EAAYI,IAAZ,IAAoB,CAAhC,EAAmC;AACnCH,MAAAA,KAAK,CAACF,CAAD,CAAL,CAASC,CAAT,EAAYG,IAAZ,IAAoBP,MAApB;AAEH,KALD,QAKS,CAACK,KAAK,CAACF,CAAD,CAAL,CAASC,CAAT,EAAYK,QALtB;;AAMAN,IAAAA,CAAC,GAAGF,CAAJ,CAf4B,CAiB5B;;AACA,OAAG;AACCE,MAAAA,CAAC;AACD,UAAGA,CAAC,GAAG,CAAJ,IAASE,KAAK,CAACF,CAAD,CAAL,CAASC,CAAT,EAAYI,IAAZ,IAAoB,CAAhC,EAAmC;AACnCH,MAAAA,KAAK,CAACF,CAAD,CAAL,CAASC,CAAT,EAAYG,IAAZ,IAAoBP,MAApB;AAEH,KALD,QAKS,CAACK,KAAK,CAACF,CAAD,CAAL,CAASC,CAAT,EAAYK,QALtB;;AAMAN,IAAAA,CAAC,GAAGF,CAAJ,CAxB4B,CA0B5B;;AACA,OAAG;AACCG,MAAAA,CAAC;AACD,UAAGA,CAAC,GAAG,CAAJ,IAASC,KAAK,CAACF,CAAD,CAAL,CAASC,CAAT,EAAYI,IAAZ,IAAoB,CAAhC,EAAmC;AACnCH,MAAAA,KAAK,CAACF,CAAD,CAAL,CAASC,CAAT,EAAYG,IAAZ,IAAoBP,MAApB;AAEH,KALD,QAKS,CAACK,KAAK,CAACF,CAAD,CAAL,CAASC,CAAT,EAAYK,QALtB;;AAMAL,IAAAA,CAAC,GAAGF,CAAJ,CAjC4B,CAmC5B;;AACA,OAAG;AACCE,MAAAA,CAAC;AACD,UAAGA,CAAC,GAAG,CAAJ,IAASC,KAAK,CAACF,CAAD,CAAL,CAASC,CAAT,EAAYI,IAAZ,IAAoB,CAAhC,EAAmC;AACnCH,MAAAA,KAAK,CAACF,CAAD,CAAL,CAASC,CAAT,EAAYG,IAAZ,IAAoBP,MAApB;AAEH,KALD,QAKS,CAACK,KAAK,CAACF,CAAD,CAAL,CAASC,CAAT,EAAYK,QALtB;AAMH,GA7CI,CA+CL;;AA/CK,CAAT","sourceRoot":"/","sourcesContent":["/**\r\n * 控制棋子车的组件\r\n */\r\n\r\ncc.Class({\r\n    extends: require(\"Piece\"),\r\n\r\n    setflag: function(status, X, Y) {\r\n        var x = X;\r\n        var y = Y;\r\n        var grids = this.node.grids;\r\n   \r\n        // 自身格子\r\n        grids[X][Y].nums += status;\r\n        \r\n        // 向下\r\n        do {\r\n            x++;\r\n            if(x > 9 || grids[x][y].flag == 0) break;\r\n            grids[x][y].nums += status;\r\n\r\n        } while (!grids[x][y].hasPiece);\r\n        x = X;\r\n\r\n        // 向上\r\n        do {\r\n            x--;\r\n            if(x < 0 || grids[x][y].flag == 0) break;\r\n            grids[x][y].nums += status;\r\n\r\n        } while (!grids[x][y].hasPiece);\r\n        x = X;\r\n\r\n        // 向左\r\n        do {\r\n            y--;\r\n            if(y < 0 || grids[x][y].flag == 0) break;\r\n            grids[x][y].nums += status;\r\n\r\n        } while (!grids[x][y].hasPiece);\r\n        y = Y;\r\n\r\n        // 向右\r\n        do {\r\n            y++;\r\n            if(y > 9 || grids[x][y].flag == 0) break;\r\n            grids[x][y].nums += status;\r\n\r\n        } while (!grids[x][y].hasPiece);\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n"]}