{"version":3,"sources":["assets\\scripts\\Grid.js"],"names":["cc","Class","Component","onLoad","node","on","repaint","self","flag","loader","loadRes","SpriteFrame","err","spriteFrame","getComponent","Sprite","start","hasPiece","num","piece"],"mappings":";;;;;;AAAA;;;;;;;;;;;AAYAA,EAAE,CAACC,KAAH,CAAS;AACL,aAASD,EAAE,CAACE,SADP;;AAGL;;;AAGAC,EAAAA,MANK,oBAMK;AACN,SAAKC,IAAL,CAAUC,EAAV,CAAa,cAAb,EAA6B,YAAY;AACrC,WAAKC,OAAL;AACH,KAFD,EAEG,IAFH;AAGH,GAVI;;AAaL;;;AAGAA,EAAAA,OAAO,EAAE,mBAAW;AAChB,QAAIC,IAAI,GAAG,IAAX;;AAEA,YAAQ,KAAKH,IAAL,CAAUI,IAAlB;AACI,WAAK,CAAL;AACIR,QAAAA,EAAE,CAACS,MAAH,CAAUC,OAAV,CAAkB,WAAlB,EAA+BV,EAAE,CAACW,WAAlC,EAA+C,UAAUC,GAAV,EAAeC,WAAf,EAA4B;AACvEN,UAAAA,IAAI,CAACH,IAAL,CAAUU,YAAV,CAAuBd,EAAE,CAACe,MAA1B,EAAkCF,WAAlC,GAAgDA,WAAhD;AACH,SAFD;AAGA;;AACJ,WAAK,CAAL;AACIb,QAAAA,EAAE,CAACS,MAAH,CAAUC,OAAV,CAAkB,YAAlB,EAAgCV,EAAE,CAACW,WAAnC,EAAgD,UAAUC,GAAV,EAAeC,WAAf,EAA4B;AACxEN,UAAAA,IAAI,CAACH,IAAL,CAAUU,YAAV,CAAuBd,EAAE,CAACe,MAA1B,EAAkCF,WAAlC,GAAgDA,WAAhD;AACH,SAFD;AAGA;AAVR;AAaH,GAhCI;AAkCLG,EAAAA,KAlCK,mBAkCI;AACL,SAAKR,IAAL,GAAY,IAAZ;AAEA,SAAKS,QAAL,GAAgB,KAAhB;AAEA,SAAKC,GAAL,GAAW,CAAX;AAEA,SAAKC,KAAL,GAAa,IAAb;AACH;AA1CI,CAAT","sourceRoot":"/","sourcesContent":["/**\r\n * 组成棋盘的格子\r\n * \r\n * @property {Number} flag  标识棋子的状态, 0为墙, 1为路, 2为灯\r\n * \r\n * @property {Boolean} hasPiece 标识该格子上是否有棋子, 0为无, 1为有\r\n * \r\n * @property {Number} num  照亮该格子的棋子的个数\r\n * \r\n * @property {Piece} piece 位于格子上的棋子, 没有则为null\r\n */\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    /**\r\n     * 当某个格子收到状态更改事件, 自动调用repaint方法\r\n     */\r\n    onLoad () {        \r\n        this.node.on(\"flag_changed\", function () {\r\n            this.repaint();\r\n        }, this);\r\n    },\r\n    \r\n    \r\n    /**\r\n     * 更换棋子背景\r\n     */\r\n    repaint: function() {\r\n        var self = this;\r\n\r\n        switch (this.node.flag) {\r\n            case 1:\r\n                cc.loader.loadRes(\"grid/path\", cc.SpriteFrame, function (err, spriteFrame) {\r\n                    self.node.getComponent(cc.Sprite).spriteFrame = spriteFrame;\r\n                });\r\n                break;\r\n            case 2:\r\n                cc.loader.loadRes(\"grid/light\", cc.SpriteFrame, function (err, spriteFrame) {\r\n                    self.node.getComponent(cc.Sprite).spriteFrame = spriteFrame;\r\n                });\r\n                break;\r\n        }\r\n\r\n    },\r\n\r\n    start () {\r\n        this.flag = null;\r\n\r\n        this.hasPiece = false;\r\n\r\n        this.num = 0;\r\n\r\n        this.piece = null;\r\n    },\r\n\r\n});\r\n"]}